@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400&display=swap');

* {
	box-sizing: border-box;
	user-select: none;
}

p {
	margin: 0;
}

html {
	height: 100%;
	color: var(--color-text-primary);
	background-color: var(--color-primary);
	border: var(--border-width) solid var(--color-primary-border);
}

body {
	margin: 0;
	height: 100%;
	font-family: 'Nunito', sans-serif;

	overflow: hidden;

	display: flex;
	justify-content: space-between;
	transition: background-color var(--animation-background-transition) ease-in-out;
}

.task {
	background-color: var(--color-task-bg);
	border: var(--border-width) solid var(--color-task-border);
	height: var(--size-task-height);
	padding: var(--spacing-task-padding);
	border-radius: var(--border-radius-lg);

	display: flex;
	flex-direction: column;
	min-width: var(--size-task-min-width);
	width: var(--size-task-width);

	cursor: pointer;

	position: relative;
}

.task > .taskTitle {
	padding-right: 5px;
	flex: 1;
	display: flex;
	align-items: center;
	justify-content: flex-start;
}

.task > .taskTitle > span {
	white-space: normal;
	overflow: hidden;
	text-overflow: ellipsis;
	line-height: var(--line-height-title);
	font-size: var(--font-size-title);
	max-height: var(--size-title-max-height);
	display: -webkit-box;
	-webkit-line-clamp: 3;
	line-clamp: 2;
	-webkit-box-orient: vertical;
	word-wrap: break-word;
}

.taskTopRow {
	display: flex;
	justify-content: space-between;
	align-items: flex-start;
	flex-shrink: 0;
	width: 100%;
	margin-top: 0;
	height: auto;
	min-height: 0;
	line-height: var(--line-height-tight);
	gap: var(--spacing-task-gap);
}

.task  .taskCategory {
	font-size: var(--font-size-category);
	text-transform: capitalize;
	line-height: var(--line-height-tight);
	margin: 0;
	padding: 0;
}

.activeTask .taskCategory {
	color: var(--color-text-white);
}

.task > .index {
    position: absolute;
    bottom: 0px;
    right: 3px;
    font-size: var(--font-size-index);
}

.mainContent {
	height: 100%;
	display: flex;
	width: var(--size-main-content-width);
	justify-content: center;
}

.taskContainer,
.timerAndActions {
	height: 100%;
	display: flex;
	gap: var(--spacing-container-gap);
	align-items: center;
}

.taskContainer {
	overflow: hidden;
	padding-left: var(--spacing-container-padding-left);
	padding-right: var(--spacing-container-padding-left);
}

.timerAndActions {
	width: var(--size-timer-width);
	min-width: var(--size-timer-min-width);
	flex-shrink: 0;
	justify-content: center;
}

@keyframes bounce {
	0% { 
		transform: translateY(0); 
	}
	20% { 
		transform: translateY(-4px); 
	}
	25% { 
		transform: translateY(-4px) translateX(-1px); 
	}
	30% { 
		transform: translateY(-4px) translateX(1px); 
	}
	35% { 
		transform: translateY(-4px) translateX(-1px); 
	}
	40% { 
		transform: translateY(-4px) translateX(0); 
	}
	60% { 
		transform: translateY(4px); 
	}
	65% { 
		transform: translateY(4px) translateX(-1px); 
	}
	70% { 
		transform: translateY(4px) translateX(1px); 
	}
	75% { 
		transform: translateY(4px) translateX(-1px); 
	}
	80% { 
		transform: translateY(4px) translateX(0); 
	}
	100% { 
		transform: translateY(0); 
	}
}

@keyframes neonBorder {
	0% { 
		border-color: var(--color-neon-red);
	}
	25% { 
		border-color: var(--color-neon-orange-red);
	}
	50% { 
		border-color: var(--color-neon-dark-orange);
	}
	75% { 
		border-color: var(--color-neon-orange);
	}
	100% { 
		border-color: var(--color-neon-yellow);
	}
}

@keyframes borderWaveSpin {
	to { 
		--angle: 360deg; 
	}
}

@keyframes pulse {
	0% {
		opacity: 0.8;
		transform: scale(1);
	}
	50% {
		opacity: 1;
		transform: scale(1.2);
	}
	100% {
		opacity: 0.8;
		transform: scale(1);
	}
}

@keyframes urgencyPulse {
	0% {
		transform: scale(1);
		opacity: 1;
	}
	5% {
		transform: scale(1.05);
		opacity: 0.8;
	}
	10% {
		transform: scale(1);
		opacity: 1;
	}
	10.1% {
		opacity: 1;
	}
	100% {
		opacity: 0.99;
	}
}

/* Applied to high and critical urgency */
.task.urgency-high:not(.activeTask),
.task.urgency-critical:not(.activeTask) {
    animation: urgencyPulse 5s ease-in-out infinite;
}

.countdown {
    text-wrap: nowrap;
	height: var(--size-countdown-height);
	display: flex;
	align-items: center;
	justify-content: center;
}

.task.activeTask {
	background-color: var(--color-task-active-bg);
	border: none; /* Remove the old darker border */
	animation: 
		bounce var(--animation-bounce-duration) ease-in-out infinite;
	transform-origin: center;
	font-weight: bold;
	color: var(--color-text-white);
	position: relative;
}

/* SVG Liquid Wave Border - Static border that doesn't bounce */
.task.activeTask::before {
	content: "";
	position: absolute;
	top: -2px;
	left: -2px;
	right: -2px;
	bottom: -2px;
	border-radius: var(--border-radius-lg);
	/* SVG Liquid Wave Border - Colors match our OKLCH system */
	background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 360 120' preserveAspectRatio='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cfilter id='soften' x='-20%25' y='-20%25' width='140%25' height='140%25'%3E%3CfeGaussianBlur stdDeviation='0.6' result='blur'/%3E%3CfeMerge%3E%3CfeMergeNode in='blur'/%3E%3CfeMergeNode in='SourceGraphic'/%3E%3C/feMerge%3E%3C/filter%3E%3Cfilter id='liquid' x='-20%25' y='-20%25' width='140%25' height='140%25'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.6 0.9' numOctaves='1' seed='4' result='noise'%3E%3Canimate attributeName='baseFrequency' dur='8s' values='0.55 0.85; 0.65 0.95; 0.55 0.85' repeatCount='indefinite'/%3E%3Canimate attributeName='seed' dur='9s' values='2;5;9;2' repeatCount='indefinite'/%3E%3C/feTurbulence%3E%3CfeDisplacementMap in='SourceGraphic' in2='noise' scale='2' xChannelSelector='R' yChannelSelector='G'/%3E%3C/filter%3E%3C/defs%3E%3Crect x='2' y='2' width='356' height='116' rx='20' fill='none' stroke='%23ff6b35' stroke-width='6'/%3E%3Cg filter='url(%23liquid)'%3E%3Crect x='2' y='2' width='356' height='116' rx='20' fill='none' stroke='%23ffc57b' stroke-width='6' stroke-linecap='round' opacity='0.9' stroke-dasharray='26 170' stroke-dashoffset='0' filter='url(%23soften)'%3E%3Canimate attributeName='stroke-dashoffset' from='0' to='-196' dur='3.2s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='2' y='2' width='356' height='116' rx='20' fill='none' stroke='%23ffc57b' stroke-width='6' stroke-linecap='round' opacity='0.6' stroke-dasharray='14 64' stroke-dashoffset='0' filter='url(%23soften)'%3E%3Canimate attributeName='stroke-dashoffset' from='0' to='-78' dur='1.9s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='2' y='2' width='356' height='116' rx='20' fill='none' stroke='%23ffc57b' stroke-width='3' stroke-linecap='round' opacity='0.35' stroke-dasharray='6 22' stroke-dashoffset='0' filter='url(%23soften)'%3E%3Canimate attributeName='stroke-dashoffset' from='0' to='-28' dur='2.6s' repeatCount='indefinite'/%3E%3C/rect%3E%3C/g%3E%3C/svg%3E");
	background-size: cover;
	background-repeat: no-repeat;
	z-index: -1;
	/* Don't inherit the bounce animation */
	animation: none;
}

.activeTaskTimer {
	/* display: none; */
	color: var(--color-text-secondary);
	font-size: var(--font-size-timer);
	font-weight: normal;
	line-height: var(--line-height-tight);
	margin: 0;
	padding: 0;
}

.activeTask .activeTaskTimer {
	color: var(--color-text-white);
}

.taskDueDate {
	font-size: var(--font-size-due-date);
	color: var(--color-text-secondary);
	line-height: var(--line-height-tight);
	margin: 0;
	padding: 0;
	flex: 1;
	text-align: center;
}

.activeTask .taskDueDate {
	color: var(--color-text-white);
}

.addTaskContainer {
	display: flex;
	height: 100%;
	align-items: center;
}

.addTaskInput {
	background-color: var(--color-input-bg);
	color: var(--color-text-primary);
	border: var(--border-width) solid var(--color-input-border);
	outline: var(--color-input-outline);
	height: var(--size-input-height);
	border-radius: var(--border-radius-sm);
	padding: var(--spacing-input-padding);
	margin-left: var(--spacing-input-margin-left);
	font-family: 'Nunito', sans-serif;
}

.user, .connection-status {
    padding: var(--spacing-user-padding);
	border-left: var(--border-width) solid var(--color-primary-border);
    display: flex;
    justify-content: center;
    align-items: center;
}

.user-icon, .connection-status-icon {
    fill: var(--color-status-error);
}

.logged-in-color {
    fill: var(--color-status-success);
}

.timer {
	display: flex;
	align-items: center;
	justify-content: center;

	height: var(--size-timer-height);
	border-left: var(--border-width) solid var(--color-primary-border);
	border-right: var(--border-width) solid var(--color-primary-border);
	padding: var(--spacing-timer-padding);
}

.button {
	background-color: inherit;
	fill: var(--color-text-primary);
	color: var(--color-text-primary);
	border-radius: var(--border-radius-button);
	height: var(--size-button-height);
	width: var(--size-button-width);
	border: none;

	transition: all var(--animation-transition);
	cursor: pointer;
	margin: var(--spacing-button-margin);
}

.button:hover {
	background-color: var(--color-button-hover);
}

.button:active {
	background-color: var(--color-button-active);
}

.skipPauseIcon {
	display: none;
}

.noActiveTaskWarning {
	color: var(--color-text-warning);
	font-weight: 900;
	font-size: var(--font-size-warning);
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translateX(-50%) translateY(-50%);
	text-shadow: 0px 0px 1px white, 0px 0px 10px #333333;
}

.invisible {
	display: none;
}

.noActiveTaskBodyWarning {
	background-color: var(--color-button-warning-bg);
}

body:hover .noActiveTaskWarning {
	display: none;
}

.searchContainer {
    z-index: var(--z-index-search);
    position: absolute;
    display: none;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-end;
    width: 100%;
    height: 90%;
    margin: auto;
    padding: 10px;
}

.searchInput {
	background-color: var(--color-input-bg);
	border: var(--border-width) solid var(--color-input-border);
	outline: var(--color-input-outline);
	height: var(--size-search-input-height);
	border-radius: var(--border-radius-sm);
	padding: var(--spacing-input-padding);
    margin-right: var(--spacing-search-margin-right);
	font-family: 'Nunito', sans-serif;
    width: 200px;
	border-radius: var(--border-radius-md);
}

.commandHelp {
	background-color: var(--color-input-bg);
	color: var(--color-text-primary);
	border: var(--border-width) solid var(--color-input-border);
	border-radius: var(--border-radius-md);
    padding: 0px 16px;
    margin-right: var(--spacing-search-margin-right);
    margin-top: 5px;
    width: 200px;
    min-height: var(--size-search-input-height);
    max-height: 120px;
    font-size: 12px;
    font-family: 'Nunito', sans-serif;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    overflow-y: auto;
    /* Hide scrollbar */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* Internet Explorer 10+ */
}

.commandHelp::-webkit-scrollbar {
    display: none; /* WebKit browsers (Chrome, Safari, Edge) */
}

.helpItem {
    margin-bottom: 5px;
    padding: 2px 0;
}

.helpItem:last-child {
    margin-bottom: 0;
}

/* Urgency Level Styles - Border-based system */
.task.urgency-low:not(.activeTask) {
    border-left: var(--size-urgency-border-width) solid var(--color-urgency-low);
    transition: border-left-color var(--animation-transition) ease-in-out;
}

.task.urgency-medium:not(.activeTask) {
    border-left: var(--size-urgency-border-width) solid var(--color-urgency-medium);
    transition: border-left-color var(--animation-transition) ease-in-out;
}

.task.urgency-medium-high:not(.activeTask) {
    border-left: var(--size-urgency-border-width) solid var(--color-urgency-medium-high);
    transition: border-left-color var(--animation-transition) ease-in-out;
}

.task.urgency-high:not(.activeTask) {
    border-left: var(--size-urgency-border-width) solid var(--color-urgency-high);
    transition: border-left-color var(--animation-transition) ease-in-out;
}

.task.urgency-critical:not(.activeTask) {
    border-left: var(--size-urgency-border-width) solid var(--color-urgency-critical);
    box-shadow: 0 0 10px rgba(244, 67, 54, 0.3); /* Subtle glow */
    transition: border-left-color var(--animation-transition) ease-in-out, box-shadow var(--animation-transition) ease-in-out;
}


/* Corner indicator for urgency levels - Rectangular with rounded corners */
.task::after {
    content: var(--corner-text, '');
    position: absolute;
    bottom: var(--size-urgency-corner-bottom);
    right: var(--size-urgency-corner-right);
    min-width: var(--size-urgency-corner-min-width);
    padding: var(--size-urgency-corner-padding);
    border-radius: var(--size-urgency-corner-border-radius);
    opacity: 0.95;
    transition: all var(--animation-transition) ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 10px;
    font-weight: bold;
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    z-index: 1;
    white-space: nowrap; /* Prevent text wrapping */
    box-sizing: border-box;
}

.task.urgency-low::after {
    background-color: var(--color-urgency-low);
}

.task.urgency-medium::after {
    background-color: var(--color-urgency-medium);
}

.task.urgency-medium-high::after {
    background-color: var(--color-urgency-medium-high);
}

.task.urgency-high::after {
    background-color: var(--color-urgency-high);
}

.task.urgency-critical::after {
    background-color: var(--color-urgency-critical);
    animation: pulse 1s infinite;
}

